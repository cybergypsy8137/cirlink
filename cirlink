#include<iostream>
using namespace std;
struct node
{
	int data;
	node *next;
};
node *head,*tail,*temp,*temp2,*newnode;

void insertnode(int val)
{
	newnode=new node;
	newnode->data=val;
	if(head==NULL)
	{
		newnode->next=newnode;
		head=tail=newnode;
	}
	else
	{
		cout<<"Where do you want to insert ?(1.Beg 2.End 3.Required location): ";
		int ch;
		cin>>ch;
		switch(ch)
		{
			case 1: newnode->next=head;
			head=newnode;
			tail->next=head;
			break;
			case 2:tail->next=newnode;
			newnode->next=head;
			tail=newnode;
			break;
			case 3:cout<<"Position to insert: ";
			int pos,i=1;
			cin>>pos;
			pos--;
			temp=head;
			while(i<pos)
			{
				i++;
				temp=temp->next;
			}
			newnode->next=temp->next;
			temp->next=newnode;
			break;
		}
	}
}
void deletenode()
{
	if(head==NULL)
	cout<<"The list is empty";
	else if(head->next==head)
	{
		cout<<"The deleted element is "<<head->data;
		head=tail=NULL;
	}
	else
	{
		cout<<"Where do you want to delete ?(1.Beg 2.End 3.Required location): ";
		int ch;
		cin>>ch;
		switch(ch)
		{
			case 1: cout<<"The deleted element is "<<head->data;
			head=head->next;
			tail->next=head;
			break;
			case 2: 	cout<<"The deleted element is "<<tail->data;
			temp=head;
			while(temp->next!=head)
			{
				temp2=temp;
				temp=temp->next;
			}
		
			temp->next=NULL;
			temp2->next=head;
			tail=temp2;
			break;
			case 3:
			int pos,i=1;
			cout<<"Position to delete: ";
			cin>>pos;
			pos--;
			temp=head;
			while(i<pos)
			{
				i++;
				temp=temp->next;
			}
			temp->next=(temp->next)->next;
			break;
		}
	}
}
void display(struct node *ptr)
{
	while(ptr->next!=head)
	{
		cout<<ptr->data<<" ";
		ptr=ptr->next;
	}
	cout<<ptr->data;
}
int search()
{
	int element;
	cout<<"Enter the element to search: ";
	cin>>element;
	temp=head;
	int count=0;
	while(temp->next!=head)
	{
		count++;
		if(temp->data==element)
		{
			return count;
			break;
		}
		temp=temp->next;
	}
	if(temp->data==element)
	return ++count;

	return -1;
}
int main()
{
	int ch,val;
	head=tail=NULL;
	cout<<"1.Insert\n2.Delete\n3.Display\n4.Search\n5.Exit\n";
	do
	{
		cout<<"Enter your choice: ";
		cin>>ch;
		switch(ch)
		{
			case 1:cout<<"Enter the value to insert: ";
			cin>>val;
			insertnode(val);
			break;
			case 2:deletenode();
			break;
			case 3:display(head);
			break;
			case 4: int pos;
			pos=search();
			if(pos==-1)
			cout<<"Not found";
			else
			cout<<"Found at position: "<<pos;
			case 5:break;
			default:cout<<"Wrong choice";
		}
	}while(ch!=5);
	return 0;
}
